diff --git a/node_modules/eslint-plugin-vue/lib/configs/base.js b/node_modules/eslint-plugin-vue/lib/configs/base.js
index 1459919..51f3212 100644
--- a/node_modules/eslint-plugin-vue/lib/configs/base.js
+++ b/node_modules/eslint-plugin-vue/lib/configs/base.js
@@ -17,6 +17,7 @@ module.exports = {
   rules: {
     'vue/comment-directive': 'error',
     'vue/jsx-uses-vars': 'error',
-    'vue/script-setup-uses-vars': 'error'
+    'vue/script-setup-uses-vars': 'error',
+    'vue/valid-appcardcode-code-prop': 'error',
   }
 }
diff --git a/node_modules/eslint-plugin-vue/lib/index.js b/node_modules/eslint-plugin-vue/lib/index.js
index 39f91b5..992dfbd 100644
--- a/node_modules/eslint-plugin-vue/lib/index.js
+++ b/node_modules/eslint-plugin-vue/lib/index.js
@@ -220,7 +220,8 @@ module.exports = {
     'valid-v-pre': require('./rules/valid-v-pre'),
     'valid-v-show': require('./rules/valid-v-show'),
     'valid-v-slot': require('./rules/valid-v-slot'),
-    'valid-v-text': require('./rules/valid-v-text')
+    'valid-v-text': require('./rules/valid-v-text'),
+    'valid-appcardcode-code-prop': require('./rules/valid-appcardcode-code-prop'),
   },
   configs: {
     base: require('./configs/base'),
diff --git a/node_modules/eslint-plugin-vue/lib/rules/valid-appcardcode-code-prop.js b/node_modules/eslint-plugin-vue/lib/rules/valid-appcardcode-code-prop.js
new file mode 100644
index 0000000..feecfb1
--- /dev/null
+++ b/node_modules/eslint-plugin-vue/lib/rules/valid-appcardcode-code-prop.js
@@ -0,0 +1,54 @@
+/**
+ * @author Toru Nagashima
+ * @copyright 2017 Toru Nagashima. All rights reserved.
+ * See LICENSE file in root directory for full license.
+ */
+'use strict'
+
+// ------------------------------------------------------------------------------
+// Requirements
+// ------------------------------------------------------------------------------
+
+const utils = require('eslint-plugin-vue/lib/utils')
+const casing = require('eslint-plugin-vue/lib/utils/casing')
+
+// ------------------------------------------------------------------------------
+// Rule Definition
+// ------------------------------------------------------------------------------
+
+module.exports = {
+  meta: {
+    type: 'problem',
+    docs: {
+      description: 'require valid prop for "AppCardCode" component',
+      categories: ['base'],
+      url: 'https://eslint.vuejs.org/rules/require-component-is.html'
+    },
+    fixable: null,
+    schema: []
+  },
+  /** @param {RuleContext} context */
+  create(context) {
+    return utils.defineTemplateBodyVisitor(context, {
+      /** @param {VElement} node */
+      "VElement[name='appcardcode']"(node) {
+        const prop_title = utils.getAttribute(node, 'title');
+        const prop_code = utils.getDirective(node, 'bind', 'code');
+
+        const titleValue = prop_title.value.value;
+        const demoCodeProperty = prop_code.value.expression.property.name;
+
+        const camalizedTitle = casing.camelCase(titleValue);
+
+        if (camalizedTitle !== demoCodeProperty) {
+          context.report({
+            node,
+            loc: node.loc,
+            message:
+              `Expected 'code' prop value to match the camelcase value of title prop value. Expected: '${camalizedTitle}', Actual: '${demoCodeProperty}'`
+          })
+        }
+      }
+    })
+  }
+}
diff --git a/node_modules/eslint-plugin-vue/lib/utils/casing.js b/node_modules/eslint-plugin-vue/lib/utils/casing.js
index b2f2e89..3448f0e 100644
--- a/node_modules/eslint-plugin-vue/lib/utils/casing.js
+++ b/node_modules/eslint-plugin-vue/lib/utils/casing.js
@@ -9,6 +9,15 @@
 function capitalize(str) {
   return str.charAt(0).toUpperCase() + str.slice(1)
 }
+
+/**
+ * Lowercase first character of string.
+ * @param {string} str
+ */
+function lowerFirstChar(str) {
+  return str.charAt(0).toLowerCase() + str.slice(1)
+}
+
 /**
  * Checks whether the given string has symbols.
  * @param {string} str
@@ -84,7 +93,11 @@ function camelCase(str) {
   if (isPascalCase(str)) {
     return str.charAt(0).toLowerCase() + str.slice(1)
   }
-  return str.replace(/[-_](\w)/gu, (_, c) => (c ? c.toUpperCase() : ''))
+  return lowerFirstChar(
+    str
+      .replace(/[-_](\w)/gu, (_, c) => (c ? c.toUpperCase() : ''))
+      .replace(' ', '')
+  )
 }
 
 /**
@@ -199,5 +212,6 @@ module.exports = {
   isKebabCase,
   isSnakeCase,
 
-  capitalize
+  capitalize,
+  lowerFirstChar
 }
