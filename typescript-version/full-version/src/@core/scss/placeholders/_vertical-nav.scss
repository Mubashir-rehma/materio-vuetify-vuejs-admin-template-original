@use "@core/scss/mixins";
@use "@configured-variables" as variables;
@use "vuetify/lib/styles/tools/states" as vuetifyStates;
@use "@core/scss/utils";

// Nav items styles (including section title)
%vertical-nav-item {
  margin-block: 0;
  margin-inline: variables.$vertical-nav-horizontal-spacing;
  padding-block: 0;
  padding-inline: variables.$vertical-nav-horizontal-padding;
  white-space: nowrap;
}

// This is same as `%vertical-nav-item` except section title is excluded
%vertical-nav-item-interactive {
  block-size: 2.625rem;
  border-end-end-radius: 3.125rem;
  border-start-end-radius: 3.125rem;

  /*
    ℹ️ We will use `margin-block-end` instead of `margin-block` to give more space for shadow to appear.
    With `margin-block`, due to small space (space gets divided between top & bottom) shadow cuts
  */
  margin-block-end: 0.375rem;
}

// Common styles for nav item icon styles
// ℹ️ Nav group's children icon styles are not here (Adjusts height, width & margin)
%vertical-nav-items-icon {
  flex-shrink: 0;
  font-size: 1.5rem;
  margin-inline-end: 0.5rem;
}

// ℹ️ Icon styling for icon nested inside another nav item (2nd level)
%vertical-nav-items-nested-icon {
  font-size: 0.9rem;

  // TODO: Please add some example of below formula
  // ℹ️ ml will be (normal icon font-size - small icon font-size) / 2
  margin-inline-start: 0.3rem;
}

%vertical-nav-items-icon-after-2nd-level {
  visibility: hidden;
}

// Open & Active nav group styles
%vertical-nav-group-open-active {
  @include vuetifyStates.active-states("&::before");

  // ℹ️ We have to make active state bg like hover state according to design
  --v-theme-overlay-multiplier: 0.3333;
}

// Section title
%vertical-nav-section-title {
  overflow: hidden;

  // ℹ️ Setting height will prevent jerking when text & icon is toggled
  block-size: 1.5rem;
  color: rgba(var(--v-theme-on-surface), var(--v-disabled-opacity));
  padding-inline: variables.$vertical-nav-horizontal-padding;

  .title-text {
    position: relative;

    &::before {
      position: absolute;
      background-color: rgba(var(--v-border-color), var(--v-border-opacity));
      block-size: 1px;
      content: "";
      inline-size: calc(variables.$vertical-nav-horizontal-padding-start - 0.5rem);
      inset-block-start: 50%;
      inset-inline: -#{variables.$vertical-nav-horizontal-padding-start} 0;
      transform: translateY(-50%);
    }

    &::after {
      position: absolute;
      background-color: rgba(var(--v-border-color), var(--v-border-opacity));
      block-size: 1px;
      content: "";
      inline-size: 200px;
      inset-block-start: 50%;
      inset-inline-end: 0;
      inset-inline-start: calc(100% + 0.625rem);
      transform: translateY(-50%);
    }
  }
}

// Vertical nav item badge styles
%vertical-nav-item-badge {
  display: inline-block;
  border-radius: 1.5rem;
  font-size: 0.75em;
  font-weight: 700;
  line-height: 1;
  padding-block: 0.35em;
  padding-inline: 0.65em;
  text-align: center;
  vertical-align: baseline;
  white-space: nowrap;
}
