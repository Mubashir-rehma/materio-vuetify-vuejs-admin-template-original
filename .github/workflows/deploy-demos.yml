name: Deploy - Demos
run-name: ${{ inputs.is_production && 'üöÄ' || 'üß™' }} Deploy - Demos

on:
  workflow_dispatch:
    inputs:
      is_production:
        type: boolean
        description: Is production deployment

jobs:
  deployment:
    runs-on: ubuntu-latest
    env:
      STAG_DIR: ${{ secrets.PROD_DIR }}staging/
      DEPLOY_DIR: ${{ secrets.PROD_DIR }}${{ !inputs.is_production && 'staging/' || '' }}
    steps:
      - name: ‚öôÔ∏è Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
            
      - name: ‚öôÔ∏è Set BRAND_NAME environment variable from repo name
        run: echo BRAND_NAME=${{ github.event.repository.name }} | cut -d '-' -f1 >> $GITHUB_ENV

      - name: ‚¨áÔ∏è Checkout template
        uses: actions/checkout@v3
        with:
          path: ${{ env.BRAND_NAME }}/vue

      - name: ‚¨áÔ∏è Checkout scripts
        uses: actions/checkout@v3
        with:
          repository: themeselection/automation-scripts
          token: ${{ secrets.GH_PAT }}
          path: automation-scripts
      
      - name: ‚¨áÔ∏è Install packages in automation-scripts dir
        working-directory: automation-scripts/vue
        run: pnpm i

      - name: ‚¨áÔ∏è Install packages in typescript full version
        working-directory: ${{ env.BRAND_NAME }}/vue/typescript-version/full-version
        run: pnpm i

      - name: üì¶ Generate demos
        working-directory: automation-scripts/vue
        run: pnpm tsx src/templates/${{ env.BRAND_NAME }}/scripts/genDemos.ts $([[ "${{ inputs.is_production }}" != "true" ]] && echo --staging)

      - name: üóÑÔ∏è Cleanup & Backup
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            mkdir -p ${{ env.DEPLOY_DIR }}
            cd ${{ env.DEPLOY_DIR }}
            rm -rf demos-backup-*.zip
            DEMO_ZIP_NAME="demos-backup-$(date +"%Y-%m-%d-%H-%M-%S").zip"
            [[ "${{ inputs.is_production }}" == "true" ]] && rm -rf ${{ env.STAG_DIR }}/demo-* && zip -r $DEMO_ZIP_NAME demo-*
            rm -rf demo-*

      - name: üèãÔ∏è Move all demos to github workspace dir
        run: mv ${{ env.BRAND_NAME }}/vue/typescript-version/full-version/demo-* $GITHUB_WORKSPACE

      - name: üöÄ Upload demos zip
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: demo-1,demo-2,demo-3,demo-4,demo-5,demo-6
          target: ${{ env.DEPLOY_DIR }}
