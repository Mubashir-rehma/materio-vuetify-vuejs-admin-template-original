@use "@configured-variables" as variables;

// üëâ VList
.v-list .v-icon {
  font-size: 1.375rem;
}

// üëâ Avatar
.v-avatar {
  color: rgba(var(--v-theme-on-surface), var(--v-high-emphasis-opacity)) !important;
  font-size: 1.125rem;

  .v-icon{
    block-size: 1.5rem;
    font-size: 1.5rem;
    inline-size: 1.5rem;
  }
}

// üëâ Alert
.v-alert{
  &:not(.v-alert--prominent) .v-alert__prepend{
    border-radius: 0.375rem;
    block-size: 1.875rem;
    inline-size: 1.875rem;

    .v-icon{
      margin: auto;
      block-size: 1.375rem !important;
      font-size: 1.375rem !important;
      inline-size: 1.375rem !important;
    }
  }

  &:not(.v-alert--prominent) {
    &.v-alert--variant-flat,
    &.v-alert--variant-elevated {
      .v-alert__prepend {
        background-color: #fff;
        box-shadow: 0 2px 4px 0 rgba(58, 53, 65, 14%);
      }
    }

    &.v-alert--variant-tonal{
      .v-alert__prepend{
        z-index: 1;
      }
    }
  }

  .v-alert__close {
    .v-btn--icon{
      --v-btn-height: 20px;

      .v-btn__content{
        padding:0.25rem;

        .v-icon{
          block-size: 1.25rem;
          font-size: 1.25rem;
          inline-size: 1.25rem;
        }
      }
    }
  }
}

@each $color-name in variables.$theme-colors-name {
  .v-alert {
    &:not(.v-alert--prominent) {
      &.bg-#{$color-name},
      &.text-#{$color-name} {
        .v-alert__prepend .v-icon {
          color: rgb(var(--v-theme-#{$color-name})) !important;
        }
      }

      &.v-alert--variant-tonal{
        &.text-#{$color-name},
        &.bg-#{$color-name}{
          .v-alert__underlay{
            background: rgb(var(--v-theme-#{$color-name})) !important;
          }

          .v-alert__prepend{
            background-color: rgb(var(--v-theme-#{$color-name}));

            .v-icon{
              color:#fff !important;
            }
          }
        }
      }

      &.v-alert--variant-outlined{
        &.text-#{$color-name},
        &.bg-#{$color-name}{
          .v-alert__prepend{
            background-color: rgba(var(--v-theme-#{$color-name}), 0.16);
          }
        }
      }
    }


  }
}

// üëâ VTextField
// Override Vuetify's default outline color for text fields to match the theme
// ‚ÑπÔ∏è We cannot override directly border color because it does not work with dirty or focus state
.v-field__outline {
  color: rgba(var(--v-theme-on-surface));

  &:not([class*="text-"]) .v-label {
    color:rgba(var(--v-theme-on-surface), var(--v-medium-emphasis-opacity));
  }
}

// hover state outline color 
.v-field:hover .v-field__outline {
  --v-field-border-opacity: 0.54 !important;
}

// üëâ VMenu
.v-menu {
  .v-list-item--density-default:not(.v-list-item--nav).v-list-item--one-line {
    padding-inline: 16px;
  }
}

// üëâ switch
.v-switch.v-switch--inset {
  .v-switch__track,
  .v-selection-control__wrapper {
    block-size: 1.125rem;
    inline-size: 1.875rem;
  }

  .v-ripple__container {
    opacity: 0;
  }

  .v-switch__track {
    background-color: rgba(var(--v-theme-on-surface), 0.12);
    box-shadow: 0 0 4px 0 rgba(0, 0, 0, 16%) inset;
    opacity: 1;

  }

  .v-selection-control__input {
    transform: translateX(-5px);

    --v-selection-control-size: 1.125rem;

    .v-switch__thumb {
      block-size: 0.875rem;
      inline-size: 0.875rem;
      transform: scale(1);
    }
  }

  .v-selection-control--dirty {
    @each $color-name in variables.$theme-colors-name {
      .text-#{$color-name} {
        .v-switch__track {
          border-color: rgb(var(--v-theme-#{$color-name}));
          background-color: rgb(var(--v-theme-#{$color-name}));
        }
      }
    }

    .v-selection-control__input {
      transform: translateX(5px);

      .v-switch__thumb {
        background-color: #fff;
      }
    }
  }
}
