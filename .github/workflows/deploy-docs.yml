name: 'Deploy - Documentation'

on:
  workflow_dispatch:
    inputs:
      is_production:
        type: boolean
        description: Is production deployment

jobs:
  deployment:
    runs-on: ubuntu-latest
    env:
      DEPLOY_DIR: ${{ inputs.is_production && secrets.PROD_DIR || secrets.STAG_DIR }}
      BASE: ${{ inputs.is_production && secrets.DOCS_BASE_PROD || secrets.DOCS_BASE_STAG }} # ‚ùó (For VuePress only) Don't forget the ending slash in base
      TEMPLATE_NAME: master
    steps:
      - run: echo $(${{ inputs.is_production }} && echo "Deploying production" || echo "Deploying staging")
      
      - name: Checkout template
        uses: actions/checkout@v3
        with:
          path: ${{ env.TEMPLATE_NAME }}/vue

      - name: Checkout scripts
        uses: actions/checkout@v3
        with:
          repository: themeselection/automation-scripts
          token: ${{ secrets.GH_PAT }}
          path: automation-scripts

      - name: Install packages in automation-scripts dir
        working-directory: automation-scripts/vue
        run: yarn

      - name: Inject GTM code in SSR template
        working-directory: automation-scripts/vue
        run: yarn tsx src/templates/${{ env.TEMPLATE_NAME }}/scripts/injectGtmInDocs.ts
      
      - name: Build documentation
        run: |
          cd ${{ env.TEMPLATE_NAME }}/vue/docs
          yarn
          yarn build
          mv .vuepress/dist $GITHUB_WORKSPACE/documentation
        
      - name: Cleanup documentation
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          script: |
            cd ${{ env.DEPLOY_DIR }}
            rm -rf documentation-backup-*.zip
            DOC_ZIP_NAME="documentation-backup-$(date +"%Y-%m-%d-%H-%M-%S").zip"
            [[ "${{ inputs.is_production }}" == "true" ]] && rm -rf ${{ secrets.STAG_DIR }}/documentation && zip -r $DOC_ZIP_NAME documentation
            rm -rf documentation
          
      - name: Upload documentation
        uses: appleboy/scp-action@master
        with:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.SSHKEY }}
          source: documentation
          target: ${{ env.DEPLOY_DIR }}