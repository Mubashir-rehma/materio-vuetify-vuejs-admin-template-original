@use "./placeholders";
@use "./variables";
@use "@layouts/styles/mixins";
@use "@core/scss/mixins" as coreMixins;

.layout-horizontal-nav {
  // 👉 Icon styles
  .nav-item-icon {
    margin-inline-end: 0.75rem;
  }

  // 👉 Common styles for nav group & nav link
  .nav-link,
  .nav-group {
    // 👉 Disabled nav items
    &.disabled {
      opacity: 0.35;
      pointer-events: none;
    }

    // Set width of inner nav group and link
    &.sub-item {
      min-inline-size: 12rem;
    }
  }

  // SECTION Nav Link
  .nav-link {
    a {
      @extend %horizontal-nav-item;

      // Adds before psudo element to style hover state
      @include coreMixins.state-before;

      // Adds vuetify states
      @include coreMixins.states($active: false);
    }

    // 👉 Top level nav link
    &:not(.sub-item) {
      a {
        @extend %horizontal-nav-items-roundness;

        &.router-link-active {
          @extend %nav-link-active-styles;
        }
      }
    }

    // 👉 Sub link
    &.sub-item {
      a {
        &.router-link-active {
          // ℹ️ We will not use active styles from material here because we want to use primary color for active link
          @extend %horizontal-nav-sub-nav-link-styles;
        }
      }
    }
  }

  // !SECTION

  // SECTION Nav Group
  .nav-group {
    .popper-triggerer {
      .nav-group-label {
        @extend %horizontal-nav-item;
      }
    }

    > .popper-triggerer > .nav-group-label {
      // Adds before psudo element to style hover state
      @include coreMixins.state-before;

      // Adds vuetify states
      @include coreMixins.states($active: false);
    }

    // 👉 Top level group
    &:not(.sub-item) {
      > .popper-triggerer {
        position: relative;

        // TODO: Decide: Shall we move this bridge style in `@layouts` or `@core`?

        /*
          ℹ️ The Bridge
          This after pseudo will work as bridge when we have space between popper triggerer and popper content
          Initially it will have pointer events none for normal behavior and once the content is shown it will
            work as bridge by setting pointer events to `auto`
        */
        &::after {
          position: absolute;
          block-size: variables.$horizontal-nav-padding;
          content: "";
          inline-size: 100%;
          inset-block-start: 100%;
          inset-inline-start: 0;
          pointer-events: none;
        }
      }

      // Enable the pseudo bridge when content is shown by setting pointer events to `auto`
      &.show-content > .popper-triggerer::after {
        /*
          ℹ️ We have added `z-index: 2` because where there is horizontal nav item below the popper trigger (group)
            without this style nav item below popper trigger (group) gets focus hence closes the popper content
        */
        z-index: 2;
        pointer-events: auto;
      }

      > .popper-triggerer > .nav-group-label {
        @extend %horizontal-nav-items-roundness;
      }

      &.active {
        > .popper-triggerer > .nav-group-label {
          @extend %nav-link-active-styles;
        }
      }

      > .popper-content {
        // ℹ️ Add space between popper wrapper & content
        margin-block-start: variables.$horizontal-nav-padding !important;
      }
    }

    // 👉 Sub group
    &.sub-item {
      &.active {
        @include coreMixins.active-states("> .popper-triggerer > .nav-group-label::before");
      }
    }

    .nav-group-arrow {
      @include mixins.icon-size(1.25rem);

      /*
        ℹ️ ml-auto won't matter in top level group (because we haven't specified fixed width for top level groups)
        but we wrote generally because we don't want to become so specific
      */
      margin-inline-start: auto;
    }

    &.popper-inline-end {
      .nav-group-arrow {
        transform: rotateZ(270deg);

        @include mixins.rtl {
          transform: rotateZ(90deg);
        }
      }
    }

    .nav-item-title {
      margin-inline-end: 0.3rem;
    }

    .popper-content {
      @extend %horizontal-nav-popper-content-initial-styles;

      background-color: rgb(var(--v-theme-surface));
      border-radius: 6px;
      box-shadow: 0 2px 5px 3px rgb(0 0 0 / 10%);
      padding-block: 0.3rem;

      // Set max-height for the popper content
      > div {
        // 120px is combined height of navbar & horizontal nav
        max-block-size: calc((var(--vh, 1vh) * 100) - 120px - 4rem);
      }
    }

    &.show-content > .popper-content {
      @extend %horizontal-nav-popper-content-visible-styles;
    }
  }

  // !SECTION
}
